alertmanager:
  enabled: true
  # podAnnotations:
  #   iam.amazonaws.com/role: arn:aws:iam::{{ AWS_ACCOUNT_ID }}:role/{{ PROJECT_NAME }}-k3s-monitoring-ses-role-{{ ENVIRONMENT_NAME }}

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    # ruleSelectorNilUsesHelmValues: false
  # podAnnotations:
  #   iam.amazonaws.com/role: arn:aws:iam::{{ AWS_ACCOUNT_ID }}:role/{{ PROJECT_NAME }}-k3s-monitoring-ses-role-{{ ENVIRONMENT_NAME }}

nodeExporter:
  enabled: true

grafana:
  enabled: true
  # podAnnotations:
  #   iam.amazonaws.com/role: arn:aws:iam::{{ AWS_ACCOUNT_ID }}:role/{{ PROJECT_NAME }}-k3s-monitoring-ses-role-{{ ENVIRONMENT_NAME }}
  security:
    existingSecret: grafana-admin-secret
    userKey: admin-user
    passwordKey: admin-password
  service:
    type: ClusterIP
  # ingress:
  #   enabled: false
  #   hosts:
  #     - grafana.{{ ROUTE53_DOMAIN }}
  sidecar:
    datasources:
      enabled: true
    dashboards:
      enabled: true
      labels:
        - grafana_dashboard
      folder: /tmp/dashboards
      folderAnnotation: grafana_folder
  smtp:
    enabled: true
    fromAddress: "monitoring@{{ ROUTE53_DOMAIN }}"
    fromName: "Monitoring"
    host: "email-smtp.{{ AWS_REGION }}.amazonaws.com:587"
    password: {{ GRAFANA_SMTP_PASSWORD }}
    skipVerify: false
    startTLSpolicy: "Always"
    user: {{ GRAFANA_SMTP_USER }}
  alerting:
    enabled: true
    contactPoints: |
      - name: "{{ GRAFANA_SMTP_USER }}"
        type: email
        isDefault: true
        settings:
          addresses: "{{ EMAIL_RECIPIENT }}"
          html: true

kubeStateMetrics:
  enabled: true
