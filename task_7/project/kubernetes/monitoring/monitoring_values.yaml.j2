alertmanager:
  enabled: true

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false

nodeExporter:
  enabled: true

grafana:
  enabled: true
  # podAnnotations:
  #   iam.amazonaws.com/role: arn:aws:iam::{{ AWS_ACCOUNT_ID }}:role/{{ PROJECT_NAME }}-k3s-monitoring-ses-role-{{ ENVIRONMENT_NAME }}
  admin:
    existingSecret: grafana-admin-secret
    userKey: admin-user
    passwordKey: admin-password
  service:
    type: ClusterIP
  sidecar:
    datasources:
      enabled: true
    dashboards:
      enabled: true
      labels:
        - grafana_dashboard
      folder: /tmp/dashboards
      folderAnnotation: grafana_folder
  dashboardsConfigMaps:
    default: grafana-default-dashboards

  envFromSecrets:
    - name: grafana-smtp-secret

  grafana.ini:
    auth.anonymous:
      enabled: false
    log:
      mode: console
      level: info
    smtp:
      enabled: true
      from_address: "monitoring@{{ ROUTE53_DOMAIN }}"
      from_name: "Monitoring"
      host: "email-smtp.{{ AWS_REGION }}.amazonaws.com:587"
      password: "${GRAFANA_SMTP_PASSWORD}"
      skip_verify: false
      startTLS_policy: "Always"
      user: "${GRAFANA_SMTP_USER}"

  alerting:
    enabled: true
    contactpoints.yaml: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: grafana-alerting-contactpoints
        namespace: {{ NAMESPACE }}
      data:
        contactpoints.yaml: |
          apiVersion: 1
          contactPoints:
            - name: Email Default
              type: email
              settings:
                addresses: "{{ JENKINS_EMAIL_USERNAME }}"
                singleEmail: true
                subject: "⚠️ Monitoring Alert from Grafana"
          routes:
            - receiver: Email Default
              groupBy:
                - alertname
              groupInterval: 5m
              repeatInterval: 1h
              continue: true
              groupWait: 30s
              match:
                severity: critical
              groupByLabels:
                - job
                - instance
              continue: true

kubeStateMetrics:
  enabled: true
